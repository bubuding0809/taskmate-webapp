import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { useRouter } from "next/router";

import { api } from "../utils/api";

const Home: NextPage = () => {
  const router = useRouter();
  const { data: sessionData } = useSession();

  const hello = api.example.hello.useQuery({
    text: `from ${sessionData?.user.name ?? "your mom"}`,
  });
  const { data: exampleData } = api.example.getAllUsers.useQuery();
  return (
    <>
      <Head>
        <title>Taskmate</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Task <span className="text-[hsl(280,100%,70%)]">mate</span>
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="/board"
            >
              <h3 className="text-2xl font-bold">Live Demo→</h3>
              <div className="text-lg">
                Demo of a Kanban board made with react-beautiful-dnd
              </div>
            </Link>
            <button
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              onClick={
                sessionData
                  ? () => router.push("/dashboard")
                  : () => signIn(undefined, { callbackUrl: "/dashboard" })
              }
            >
              <h3 className="text-2xl font-bold">Start Here→</h3>
              <div className="text-start text-lg">
                Click here to sign in and get started with your boards
              </div>
            </button>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
